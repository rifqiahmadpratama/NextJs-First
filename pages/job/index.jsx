import React, { Fragment, useEffect, useState } from "react";
import Head from "next/head";
import Navbar from "../../components/navbar/index";
import Footer from "../../components/footer/index";
import Pagination from "../../components/pagination/index";
import style from "../../styles/Job.module.css";
import { useRouter } from "next/router";
import Maps from "../../assets/images/location.svg";
import Profile from "../../assets/images/profile.svg";
import Image from "next/image";
import axios from "axios";
import Link from "next/link";
import { Button } from "react-bootstrap";
import nookies from "nookies";

export async function getstaticprops() {
  const res = await axios.get(`http://localhost:3005/users?_limit=5`);
  return {
    props: { data: res.data },
  };
}

const Detail = ({ data }) => {
  const router = useRouter();
  const [search, setSearch] = useState("");
  const [dataSearch, setDataSearch] = useState([]);
  const [sort, setSort] = useState("desc");
  const [sortBy, setSortBy] = useState("name");
  const [page, setPage] = useState(1);
  const handleSearch = (e) => {
    e.preventDefault();
    fetch();
  };
  console.log(search);
  const fetch = async () => {
    const result = await axios.get(
      `http://localhost:3005/users?q=${search}&_sort=${sortBy}&_order=${sort},desc&_limit=5&_page=${page}`
    );
    setDataSearch(result.data);
    // dataSearch.map(item =>{
    console.log(dataSearch);

    // console.log(item)
    // })
  };
  // console.log(page + 1)
  const increment = () => {
    if (page == 2) {
      return;
    } else if (page >= 1) {
      setPage(page + 1);
      fetch();
    }
  };
  const decrement = () => {
    if (page <= 1) {
      return;
    } else {
      setPage(page - 1);
      fetch();
    }
  };

  useEffect(() => {
    fetch();
  }, [sort, sortBy, page]);
  // })
  console.log(sort);
  console.log(data);
  return (
    <Fragment>
      <div>
        <Head>
          <title>Hirejob</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/vercel.svg" />
        </Head>
        <Navbar />
        <div className={`${style.bg_top}`}>
          <div className="d-flex">
            <p className="fw-bold text-white mt-3">Top Jobs</p>
          </div>
        </div>
        <div></div>
        <div className={style.mainbody}>
          <div className={style.container}>
            <div className={style.searchbar}>
              <input
                placeholder="Search for any skill"
                onChange={(e) => setSearch(e.target.value)}
              />
              <div
                className={`${style.sort} dropdown d-flex flex-row justify-content-center align-items-center`}
              >
                <button
                  class="btn btn-transparent dropdown-toggle me-4"
                  type="button"
                  id="registerDropdown"
                  data-bs-toggle="dropdown"
                  aria-expanded="false"
                >
                  Sort By
                </button>
                <ul class="dropdown-menu" aria-labelledby="registerDropdown">
                  <li>
                    <button
                      class="dropdown-item"
                      onClick={() => {
                        setSort("asc");
                        setSortBy("name");
                        fetch();
                      }}
                    >
                      Name
                    </button>
                  </li>
                  <li>
                    <button
                      class="dropdown-item"
                      onClick={() => {
                        setSort("asc");
                        setSortBy("job");
                        fetch();
                      }}
                    >
                      Position
                    </button>
                  </li>
                  <li>
                    <button
                      class="dropdown-item"
                      onClick={() => {
                        setSort("asc");
                        setSortBy("skill");
                        fetch();
                      }}
                    >
                      Skill
                    </button>
                  </li>
                  <li>
                    <button
                      class="dropdown-item"
                      onClick={() => {
                        setSort("asc");
                        setSortBy("address");
                        fetch();
                      }}
                    >
                      Location
                    </button>
                  </li>
                </ul>
              </div>
              <button onClick={handleSearch}>Search</button>
            </div>
            <div className={style.main}>
              {search ? (
                dataSearch?.map((item, index) => {
                  // if (item.skill === ""){
                  return (
                    <div className={style.card} key={index}>
                      <Link href={item.name}>
                        <div className={style.profile}>
                          <Image
                            src={Profile}
                            alt="profile"
                            className={style.profile_img}
                          />
                        </div>
                      </Link>

                      <div className={style.profiledetail}>
                        <Link href={item.name}>
                          <p
                            className="font-weight-bold "
                            style={{ fontSize: "20px", cursor: "pointer" }}
                          >
                            {item.name}
                          </p>
                        </Link>
                        <p className="text-muted">{item.job}</p>
                        <p className="text-muted">
                          <Image src={Maps} alt="location" />
                          <span className="ml-2">{item.address}</span>
                        </p>
                        <div className={style.skills}>
                          {item?.skill?.length > 0
                            ? item?.skill?.map((item, index) => {
                                return (
                                  <div className={style.skill} key={index}>
                                    {item}
                                  </div>
                                );
                              })
                            : "loadding"}
                        </div>
                      </div>
                    </div>
                  );
                  // }
                })
              ) : (
                <>
                  {dataSearch?.map((data, index) => {
                    console.log(data.name);
                    // if (data?.skill) {
                    return (
                      <div className={style.card} key={data.id}>
                        <Link href={data.name}>
                          <div className={style.profile}>
                            <Image
                              src={Profile}
                              alt="profile"
                              className={style.profile_img}
                            />
                          </div>
                        </Link>

                        <div className={style.profiledetail}>
                          <Link href={data.name}>
                            <p
                              className="font-weight-bold "
                              style={{ fontSize: "20px", cursor: "pointer" }}
                            >
                              {data.name}
                            </p>
                          </Link>
                          <p className="text-muted">{data.job}</p>
                          <p className="text-muted">
                            <Image src={Maps} alt="location" />
                            <span className="ml-2">{data.address}</span>
                          </p>
                          <div className={style.skills}>
                            {data?.skill?.length > 0
                              ? data?.skill?.map((data, index) => {
                                  return (
                                    <div className={style.skill} key={index}>
                                      {data}
                                    </div>
                                  );
                                })
                              : ""}
                          </div>
                        </div>
                      </div>
                    );
                    // }
                  })}
                </>
              )}
            </div>
          </div>
          <div className={style.pagination}>
            <Pagination increment={increment} decrement={decrement} />
          </div>
        </div>
      </div>
      <Footer />
    </Fragment>
  );
};

export default Detail;
